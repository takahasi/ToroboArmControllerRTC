# Python stubs generated by omniidl from idl/ManipulatorCommonInterface_DataTypes.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "BasicDataType.idl"
import BasicDataType_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")

#
# Start of module "JARA_ARM"
#
__name__ = "JARA_ARM"
_0_JARA_ARM = omniORB.openModule("JARA_ARM", r"idl/ManipulatorCommonInterface_DataTypes.idl")
_0_JARA_ARM__POA = omniORB.openModule("JARA_ARM__POA", r"idl/ManipulatorCommonInterface_DataTypes.idl")


# typedef ... DoubleSeq
class DoubleSeq:
    _NP_RepositoryId = "IDL:JARA_ARM/DoubleSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_JARA_ARM.DoubleSeq = DoubleSeq
_0_JARA_ARM._d_DoubleSeq  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 0)
_0_JARA_ARM._ad_DoubleSeq = (omniORB.tcInternal.tv_alias, DoubleSeq._NP_RepositoryId, "DoubleSeq", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 0))
_0_JARA_ARM._tc_DoubleSeq = omniORB.tcInternal.createTypeCode(_0_JARA_ARM._ad_DoubleSeq)
omniORB.registerType(DoubleSeq._NP_RepositoryId, _0_JARA_ARM._ad_DoubleSeq, _0_JARA_ARM._tc_DoubleSeq)
del DoubleSeq

# typedef ... JointPos
class JointPos:
    _NP_RepositoryId = "IDL:JARA_ARM/JointPos:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_JARA_ARM.JointPos = JointPos
_0_JARA_ARM._d_JointPos  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 0)
_0_JARA_ARM._ad_JointPos = (omniORB.tcInternal.tv_alias, JointPos._NP_RepositoryId, "JointPos", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 0))
_0_JARA_ARM._tc_JointPos = omniORB.tcInternal.createTypeCode(_0_JARA_ARM._ad_JointPos)
omniORB.registerType(JointPos._NP_RepositoryId, _0_JARA_ARM._ad_JointPos, _0_JARA_ARM._tc_JointPos)
del JointPos

# struct LimitValue
_0_JARA_ARM.LimitValue = omniORB.newEmptyClass()
class LimitValue (omniORB.StructBase):
    _NP_RepositoryId = "IDL:JARA_ARM/LimitValue:1.0"

    def __init__(self, upper, lower):
        self.upper = upper
        self.lower = lower

_0_JARA_ARM.LimitValue = LimitValue
_0_JARA_ARM._d_LimitValue  = (omniORB.tcInternal.tv_struct, LimitValue, LimitValue._NP_RepositoryId, "LimitValue", "upper", omniORB.tcInternal.tv_double, "lower", omniORB.tcInternal.tv_double)
_0_JARA_ARM._tc_LimitValue = omniORB.tcInternal.createTypeCode(_0_JARA_ARM._d_LimitValue)
omniORB.registerType(LimitValue._NP_RepositoryId, _0_JARA_ARM._d_LimitValue, _0_JARA_ARM._tc_LimitValue)
del LimitValue

# struct RETURN_ID
_0_JARA_ARM.RETURN_ID = omniORB.newEmptyClass()
class RETURN_ID (omniORB.StructBase):
    _NP_RepositoryId = "IDL:JARA_ARM/RETURN_ID:1.0"

    def __init__(self, id, comment):
        self.id = id
        self.comment = comment

_0_JARA_ARM.RETURN_ID = RETURN_ID
_0_JARA_ARM._d_RETURN_ID  = (omniORB.tcInternal.tv_struct, RETURN_ID, RETURN_ID._NP_RepositoryId, "RETURN_ID", "id", omniORB.tcInternal.tv_long, "comment", (omniORB.tcInternal.tv_string,0))
_0_JARA_ARM._tc_RETURN_ID = omniORB.tcInternal.createTypeCode(_0_JARA_ARM._d_RETURN_ID)
omniORB.registerType(RETURN_ID._NP_RepositoryId, _0_JARA_ARM._d_RETURN_ID, _0_JARA_ARM._tc_RETURN_ID)
del RETURN_ID
_0_JARA_ARM.OK = 0
_0_JARA_ARM.NG = -1
_0_JARA_ARM.STATUS_ERR = -2
_0_JARA_ARM.VALUE_ERR = -3
_0_JARA_ARM.NOT_SV_ON_ERR = -4
_0_JARA_ARM.FULL_MOTION_QUEUE_ERR = -5
_0_JARA_ARM.NOT_IMPLEMENTED = -6

# struct TimedJointPos
_0_JARA_ARM.TimedJointPos = omniORB.newEmptyClass()
class TimedJointPos (omniORB.StructBase):
    _NP_RepositoryId = "IDL:JARA_ARM/TimedJointPos:1.0"

    def __init__(self, tm, pos):
        self.tm = tm
        self.pos = pos

_0_JARA_ARM.TimedJointPos = TimedJointPos
_0_JARA_ARM._d_TimedJointPos  = (omniORB.tcInternal.tv_struct, TimedJointPos, TimedJointPos._NP_RepositoryId, "TimedJointPos", "tm", omniORB.typeMapping["IDL:RTC/Time:1.0"], "pos", omniORB.typeMapping["IDL:JARA_ARM/JointPos:1.0"])
_0_JARA_ARM._tc_TimedJointPos = omniORB.tcInternal.createTypeCode(_0_JARA_ARM._d_TimedJointPos)
omniORB.registerType(TimedJointPos._NP_RepositoryId, _0_JARA_ARM._d_TimedJointPos, _0_JARA_ARM._tc_TimedJointPos)
del TimedJointPos

# typedef ... ULONG
class ULONG:
    _NP_RepositoryId = "IDL:JARA_ARM/ULONG:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_JARA_ARM.ULONG = ULONG
_0_JARA_ARM._d_ULONG  = omniORB.tcInternal.tv_ulong
_0_JARA_ARM._ad_ULONG = (omniORB.tcInternal.tv_alias, ULONG._NP_RepositoryId, "ULONG", omniORB.tcInternal.tv_ulong)
_0_JARA_ARM._tc_ULONG = omniORB.tcInternal.createTypeCode(_0_JARA_ARM._ad_ULONG)
omniORB.registerType(ULONG._NP_RepositoryId, _0_JARA_ARM._ad_ULONG, _0_JARA_ARM._tc_ULONG)
del ULONG

#
# End of module "JARA_ARM"
#
__name__ = "ManipulatorCommonInterface_DataTypes_idl"

_exported_modules = ( "JARA_ARM", )

# The end.
